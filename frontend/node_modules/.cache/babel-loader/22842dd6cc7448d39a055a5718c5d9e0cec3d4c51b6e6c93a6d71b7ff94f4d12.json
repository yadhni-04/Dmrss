{"ast":null,"code":"var _jsxFileName = \"/Users/yadhnikharkar/Desktop/dmrs-mvp/frontend/src/components/UploadRecord.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport API from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadRecord() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [patientAddr, setPatientAddr] = useState('');\n  const [recordId, setRecordId] = useState('');\n  async function handleUpload(e) {\n    e.preventDefault();\n    const fd = new FormData();\n    fd.append('file', file);\n    fd.append('patientAddress', patientAddr);\n    fd.append('recordId', recordId);\n    const res = await API.post('/records/upload', fd, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    alert('Uploaded. CID: ' + res.data.cid + '\\nSymKey (hex, demo only): ' + res.data.symKeyHex);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleUpload,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Patient Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: patientAddr,\n        onChange: e => setPatientAddr(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Record ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: recordId,\n        onChange: e => setRecordId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Upload Encrypted Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadRecord, \"UCgUzfIX5JAcseAFTol5LgPy4F0=\");\n_c = UploadRecord;\nvar _c;\n$RefreshReg$(_c, \"UploadRecord\");","map":{"version":3,"names":["React","useState","API","jsxDEV","_jsxDEV","UploadRecord","_s","file","setFile","patientAddr","setPatientAddr","recordId","setRecordId","handleUpload","e","preventDefault","fd","FormData","append","res","post","headers","alert","data","cid","symKeyHex","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","type","files","_c","$RefreshReg$"],"sources":["/Users/yadhnikharkar/Desktop/dmrs-mvp/frontend/src/components/UploadRecord.js"],"sourcesContent":["import React, {useState} from 'react';\nimport API from '../api';\n\nexport default function UploadRecord(){\n  const [file, setFile] = useState(null);\n  const [patientAddr, setPatientAddr] = useState('');\n  const [recordId, setRecordId] = useState('');\n\n  async function handleUpload(e){\n    e.preventDefault();\n    const fd = new FormData();\n    fd.append('file', file);\n    fd.append('patientAddress', patientAddr);\n    fd.append('recordId', recordId);\n    const res = await API.post('/records/upload', fd, { headers: { 'Content-Type': 'multipart/form-data' }});\n    alert('Uploaded. CID: ' + res.data.cid + '\\nSymKey (hex, demo only): ' + res.data.symKeyHex);\n  }\n\n  return (\n    <form onSubmit={handleUpload}>\n      <div>\n        <label>Patient Address:</label>\n        <input value={patientAddr} onChange={e=>setPatientAddr(e.target.value)} />\n      </div>\n      <div>\n        <label>Record ID:</label>\n        <input value={recordId} onChange={e=>setRecordId(e.target.value)} />\n      </div>\n      <div>\n        <input type=\"file\" onChange={e=>setFile(e.target.files[0])} />\n      </div>\n      <button type=\"submit\">Upload Encrypted Record</button>\n    </form>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}