{"ast":null,"code":"/**\n *  Events allow for applications to use the observer pattern, which\n *  allows subscribing and publishing events, outside the normal\n *  execution paths.\n *\n *  @_section api/utils/events:Events  [about-events]\n */\nimport { defineProperties } from \"./properties.js\";\n/**\n *  When an [[EventEmitterable]] triggers a [[Listener]], the\n *  callback always ahas one additional argument passed, which is\n *  an **EventPayload**.\n */\nexport class EventPayload {\n  /**\n   *  The event filter.\n   */\n  filter;\n  /**\n   *  The **EventEmitterable**.\n   */\n  emitter;\n  #listener;\n  /**\n   *  Create a new **EventPayload** for %%emitter%% with\n   *  the %%listener%% and for %%filter%%.\n   */\n  constructor(emitter, listener, filter) {\n    this.#listener = listener;\n    defineProperties(this, {\n      emitter,\n      filter\n    });\n  }\n  /**\n   *  Unregister the triggered listener for future events.\n   */\n  async removeListener() {\n    if (this.#listener == null) {\n      return;\n    }\n    await this.emitter.off(this.filter, this.#listener);\n  }\n}","map":{"version":3,"names":["defineProperties","EventPayload","filter","emitter","listener","constructor","removeListener","off"],"sources":["/Users/yadhnikharkar/Desktop/dmrs-mvp/frontend/node_modules/ethers/lib.esm/utils/events.js"],"sourcesContent":["/**\n *  Events allow for applications to use the observer pattern, which\n *  allows subscribing and publishing events, outside the normal\n *  execution paths.\n *\n *  @_section api/utils/events:Events  [about-events]\n */\nimport { defineProperties } from \"./properties.js\";\n/**\n *  When an [[EventEmitterable]] triggers a [[Listener]], the\n *  callback always ahas one additional argument passed, which is\n *  an **EventPayload**.\n */\nexport class EventPayload {\n    /**\n     *  The event filter.\n     */\n    filter;\n    /**\n     *  The **EventEmitterable**.\n     */\n    emitter;\n    #listener;\n    /**\n     *  Create a new **EventPayload** for %%emitter%% with\n     *  the %%listener%% and for %%filter%%.\n     */\n    constructor(emitter, listener, filter) {\n        this.#listener = listener;\n        defineProperties(this, { emitter, filter });\n    }\n    /**\n     *  Unregister the triggered listener for future events.\n     */\n    async removeListener() {\n        if (this.#listener == null) {\n            return;\n        }\n        await this.emitter.off(this.filter, this.#listener);\n    }\n}\n//# sourceMappingURL=events.js.map"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,gBAAgB,QAAQ,iBAAiB;AAClD;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,YAAY,CAAC;EACtB;AACJ;AACA;EACIC,MAAM;EACN;AACJ;AACA;EACIC,OAAO;EACP,CAACC,QAAQ;EACT;AACJ;AACA;AACA;EACIC,WAAWA,CAACF,OAAO,EAAEC,QAAQ,EAAEF,MAAM,EAAE;IACnC,IAAI,CAAC,CAACE,QAAQ,GAAGA,QAAQ;IACzBJ,gBAAgB,CAAC,IAAI,EAAE;MAAEG,OAAO;MAAED;IAAO,CAAC,CAAC;EAC/C;EACA;AACJ;AACA;EACI,MAAMI,cAAcA,CAAA,EAAG;IACnB,IAAI,IAAI,CAAC,CAACF,QAAQ,IAAI,IAAI,EAAE;MACxB;IACJ;IACA,MAAM,IAAI,CAACD,OAAO,CAACI,GAAG,CAAC,IAAI,CAACL,MAAM,EAAE,IAAI,CAAC,CAACE,QAAQ,CAAC;EACvD;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}