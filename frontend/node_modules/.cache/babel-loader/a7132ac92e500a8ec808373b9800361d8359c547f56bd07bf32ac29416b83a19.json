{"ast":null,"code":"var _jsxFileName = \"/Users/yadhnikharkar/Desktop/dmrs-mvp/frontend/src/pages/GrantConsentPage.js\",\n  _s = $RefreshSig$();\n// src/pages/GrantConsentPage.js\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GrantConsentPage() {\n  _s();\n  const [recordId, setRecordId] = useState(\"\");\n  const [clinicianAddress, setClinicianAddress] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const handleGrant = async e => {\n    e.preventDefault();\n    if (!recordId || !clinicianAddress) {\n      setMessage(\"Please fill all fields.\");\n      return;\n    }\n    try {\n      const res = await axios.post(\"http://localhost:4000/api/records/grant\", {\n        recordId,\n        clinicianAddress\n      });\n      setMessage(res.data.message || \"Consent granted successfully!\");\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMessage(\"Failed to grant consent: \" + ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Grant Consent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleGrant,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Record ID\",\n        value: recordId,\n        onChange: e => setRecordId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 117\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 122\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Clinician Ethereum Address\",\n        value: clinicianAddress,\n        onChange: e => setClinicianAddress(e.target.value),\n        style: {\n          width: \"400px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 174\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 179\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          padding: \"10px 20px\"\n        },\n        children: \"Grant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(GrantConsentPage, \"otVb1QxcbyU1PCChUiy5k8HevjM=\");\n_c = GrantConsentPage;\nvar _c;\n$RefreshReg$(_c, \"GrantConsentPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GrantConsentPage","_s","recordId","setRecordId","clinicianAddress","setClinicianAddress","message","setMessage","handleGrant","e","preventDefault","res","post","data","err","_err$response","_err$response$data","response","error","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","width","_c","$RefreshReg$"],"sources":["/Users/yadhnikharkar/Desktop/dmrs-mvp/frontend/src/pages/GrantConsentPage.js"],"sourcesContent":["// src/pages/GrantConsentPage.js\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function GrantConsentPage() {\n  const [recordId, setRecordId] = useState(\"\");\n  const [clinicianAddress, setClinicianAddress] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const handleGrant = async (e) => {\n    e.preventDefault();\n    if (!recordId || !clinicianAddress) {\n      setMessage(\"Please fill all fields.\");\n      return;\n    }\n\n    try {\n      const res = await axios.post(\"http://localhost:4000/api/records/grant\", { recordId, clinicianAddress });\n      setMessage(res.data.message || \"Consent granted successfully!\");\n    } catch (err) {\n      setMessage(\"Failed to grant consent: \" + err.response?.data?.error || err.message);\n    }\n  };\n\n  return (\n    <div style={{ padding: \"20px\" }}>\n      <h2>Grant Consent</h2>\n      <form onSubmit={handleGrant}>\n        <input type=\"text\" placeholder=\"Record ID\" value={recordId} onChange={(e) => setRecordId(e.target.value)} /><br/><br/>\n        <input type=\"text\" placeholder=\"Clinician Ethereum Address\" value={clinicianAddress} onChange={(e) => setClinicianAddress(e.target.value)} style={{width:\"400px\"}} /><br/><br/>\n        <button type=\"submit\" style={{padding:\"10px 20px\"}}>Grant</button>\n      </form>\n      {message && <p>{message}</p>}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}