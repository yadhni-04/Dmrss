{"ast":null,"code":"var _jsxFileName = \"/Users/yadhnikharkar/Desktop/dmrs-mvp/frontend/src/pages/UploadPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport API from '../api';\nimport { ethers } from 'ethers';\nimport './Page.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadPage() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [patientAddr, setPatientAddr] = useState('');\n  const [recordId, setRecordId] = useState('');\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!file) return alert(\"Please select a file\");\n    if (!patientAddr || !ethers.utils.isAddress(patientAddr)) return alert(\"Invalid Ethereum address\");\n    if (!recordId) return alert(\"Record ID missing\");\n    const fd = new FormData();\n    fd.append('file', file);\n    fd.append('patientAddress', patientAddr);\n    fd.append('recordId', recordId);\n    try {\n      const res = await API.post('/records/upload', fd, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert(`Uploaded!\\nCID: ${res.data.cid}\\nSymKey (hex, demo): ${res.data.symKeyHex}`);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(err);\n      alert(\"Upload failed: \" + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Medical Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-container\",\n      onSubmit: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Patient Address (0x...)\",\n        value: patientAddr,\n        onChange: e => setPatientAddr(e.target.value.trim())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Record ID\",\n        value: recordId,\n        onChange: e => setRecordId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadPage, \"UCgUzfIX5JAcseAFTol5LgPy4F0=\");\n_c = UploadPage;\nvar _c;\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"names":["React","useState","API","ethers","jsxDEV","_jsxDEV","UploadPage","_s","file","setFile","patientAddr","setPatientAddr","recordId","setRecordId","handleUpload","e","preventDefault","alert","utils","isAddress","fd","FormData","append","res","post","headers","data","cid","symKeyHex","err","_err$response","_err$response$data","console","error","response","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","trim","files","_c","$RefreshReg$"],"sources":["/Users/yadhnikharkar/Desktop/dmrs-mvp/frontend/src/pages/UploadPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport API from '../api';\nimport { ethers } from 'ethers';\nimport './Page.css';\n\nexport default function UploadPage() {\n  const [file, setFile] = useState(null);\n  const [patientAddr, setPatientAddr] = useState('');\n  const [recordId, setRecordId] = useState('');\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n    if (!file) return alert(\"Please select a file\");\n    if (!patientAddr || !ethers.utils.isAddress(patientAddr))\n      return alert(\"Invalid Ethereum address\");\n    if (!recordId) return alert(\"Record ID missing\");\n\n    const fd = new FormData();\n    fd.append('file', file);\n    fd.append('patientAddress', patientAddr);\n    fd.append('recordId', recordId);\n\n    try {\n      const res = await API.post('/records/upload', fd, {\n        headers: { 'Content-Type': 'multipart/form-data' }\n      });\n      alert(`Uploaded!\\nCID: ${res.data.cid}\\nSymKey (hex, demo): ${res.data.symKeyHex}`);\n    } catch (err) {\n      console.error(err);\n      alert(\"Upload failed: \" + (err.response?.data?.error || err.message));\n    }\n  };\n\n  return (\n    <div className=\"page-container\">\n      <h2>Upload Medical Record</h2>\n      <form className=\"form-container\" onSubmit={handleUpload}>\n        <input type=\"text\" placeholder=\"Patient Address (0x...)\" value={patientAddr}\n               onChange={e => setPatientAddr(e.target.value.trim())} />\n        <input type=\"text\" placeholder=\"Record ID\" value={recordId}\n               onChange={e => setRecordId(e.target.value)} />\n        <input type=\"file\" onChange={e => setFile(e.target.files[0])} />\n        <button type=\"submit\">Upload</button>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}