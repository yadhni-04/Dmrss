{"ast":null,"code":"/**\n *  Property helper functions.\n *\n *  @_subsection api/utils:Properties  [about-properties]\n */\nfunction checkType(value, type, name) {\n  const types = type.split(\"|\").map(t => t.trim());\n  for (let i = 0; i < types.length; i++) {\n    switch (type) {\n      case \"any\":\n        return;\n      case \"bigint\":\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        if (typeof value === type) {\n          return;\n        }\n    }\n  }\n  const error = new Error(`invalid value for type ${type}`);\n  error.code = \"INVALID_ARGUMENT\";\n  error.argument = `value.${name}`;\n  error.value = value;\n  throw error;\n}\n/**\n *  Resolves to a new object that is a copy of %%value%%, but with all\n *  values resolved.\n */\nexport async function resolveProperties(value) {\n  const keys = Object.keys(value);\n  const results = await Promise.all(keys.map(k => Promise.resolve(value[k])));\n  return results.reduce((accum, v, index) => {\n    accum[keys[index]] = v;\n    return accum;\n  }, {});\n}\n/**\n *  Assigns the %%values%% to %%target%% as read-only values.\n *\n *  It %%types%% is specified, the values are checked.\n */\nexport function defineProperties(target, values, types) {\n  for (let key in values) {\n    let value = values[key];\n    const type = types ? types[key] : null;\n    if (type) {\n      checkType(value, type, key);\n    }\n    Object.defineProperty(target, key, {\n      enumerable: true,\n      value,\n      writable: false\n    });\n  }\n}","map":{"version":3,"names":["checkType","value","type","name","types","split","map","t","trim","i","length","error","Error","code","argument","resolveProperties","keys","Object","results","Promise","all","k","resolve","reduce","accum","v","index","defineProperties","target","values","key","defineProperty","enumerable","writable"],"sources":["/Users/yadhnikharkar/Desktop/dmrs-mvp/frontend/node_modules/ethers/lib.esm/utils/properties.js"],"sourcesContent":["/**\n *  Property helper functions.\n *\n *  @_subsection api/utils:Properties  [about-properties]\n */\nfunction checkType(value, type, name) {\n    const types = type.split(\"|\").map(t => t.trim());\n    for (let i = 0; i < types.length; i++) {\n        switch (type) {\n            case \"any\":\n                return;\n            case \"bigint\":\n            case \"boolean\":\n            case \"number\":\n            case \"string\":\n                if (typeof (value) === type) {\n                    return;\n                }\n        }\n    }\n    const error = new Error(`invalid value for type ${type}`);\n    error.code = \"INVALID_ARGUMENT\";\n    error.argument = `value.${name}`;\n    error.value = value;\n    throw error;\n}\n/**\n *  Resolves to a new object that is a copy of %%value%%, but with all\n *  values resolved.\n */\nexport async function resolveProperties(value) {\n    const keys = Object.keys(value);\n    const results = await Promise.all(keys.map((k) => Promise.resolve(value[k])));\n    return results.reduce((accum, v, index) => {\n        accum[keys[index]] = v;\n        return accum;\n    }, {});\n}\n/**\n *  Assigns the %%values%% to %%target%% as read-only values.\n *\n *  It %%types%% is specified, the values are checked.\n */\nexport function defineProperties(target, values, types) {\n    for (let key in values) {\n        let value = values[key];\n        const type = (types ? types[key] : null);\n        if (type) {\n            checkType(value, type, key);\n        }\n        Object.defineProperty(target, key, { enumerable: true, value, writable: false });\n    }\n}\n//# sourceMappingURL=properties.js.map"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,SAASA,CAACC,KAAK,EAAEC,IAAI,EAAEC,IAAI,EAAE;EAClC,MAAMC,KAAK,GAAGF,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EAChD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,KAAK,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;IACnC,QAAQP,IAAI;MACR,KAAK,KAAK;QACN;MACJ,KAAK,QAAQ;MACb,KAAK,SAAS;MACd,KAAK,QAAQ;MACb,KAAK,QAAQ;QACT,IAAI,OAAQD,KAAM,KAAKC,IAAI,EAAE;UACzB;QACJ;IACR;EACJ;EACA,MAAMS,KAAK,GAAG,IAAIC,KAAK,CAAC,0BAA0BV,IAAI,EAAE,CAAC;EACzDS,KAAK,CAACE,IAAI,GAAG,kBAAkB;EAC/BF,KAAK,CAACG,QAAQ,GAAG,SAASX,IAAI,EAAE;EAChCQ,KAAK,CAACV,KAAK,GAAGA,KAAK;EACnB,MAAMU,KAAK;AACf;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeI,iBAAiBA,CAACd,KAAK,EAAE;EAC3C,MAAMe,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACf,KAAK,CAAC;EAC/B,MAAMiB,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACV,GAAG,CAAEe,CAAC,IAAKF,OAAO,CAACG,OAAO,CAACrB,KAAK,CAACoB,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7E,OAAOH,OAAO,CAACK,MAAM,CAAC,CAACC,KAAK,EAAEC,CAAC,EAAEC,KAAK,KAAK;IACvCF,KAAK,CAACR,IAAI,CAACU,KAAK,CAAC,CAAC,GAAGD,CAAC;IACtB,OAAOD,KAAK;EAChB,CAAC,EAAE,CAAC,CAAC,CAAC;AACV;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,gBAAgBA,CAACC,MAAM,EAAEC,MAAM,EAAEzB,KAAK,EAAE;EACpD,KAAK,IAAI0B,GAAG,IAAID,MAAM,EAAE;IACpB,IAAI5B,KAAK,GAAG4B,MAAM,CAACC,GAAG,CAAC;IACvB,MAAM5B,IAAI,GAAIE,KAAK,GAAGA,KAAK,CAAC0B,GAAG,CAAC,GAAG,IAAK;IACxC,IAAI5B,IAAI,EAAE;MACNF,SAAS,CAACC,KAAK,EAAEC,IAAI,EAAE4B,GAAG,CAAC;IAC/B;IACAb,MAAM,CAACc,cAAc,CAACH,MAAM,EAAEE,GAAG,EAAE;MAAEE,UAAU,EAAE,IAAI;MAAE/B,KAAK;MAAEgC,QAAQ,EAAE;IAAM,CAAC,CAAC;EACpF;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}