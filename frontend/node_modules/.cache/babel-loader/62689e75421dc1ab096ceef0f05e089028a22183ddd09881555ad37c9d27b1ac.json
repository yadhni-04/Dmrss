{"ast":null,"code":"var _jsxFileName = \"/Users/yadhnikharkar/Desktop/dmrs-mvp/frontend/src/components/UploadRecord.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport API from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadRecord() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [patientAddr, setPatientAddr] = useState('');\n  const [recordId, setRecordId] = useState('');\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!file || !patientAddr || !recordId) {\n      alert(\"Please fill all fields and select a file\");\n      return;\n    }\n    const fd = new FormData();\n    fd.append('file', file);\n    fd.append('patientAddress', patientAddr);\n    fd.append('recordId', recordId);\n    try {\n      const res = await API.post('/records/upload', fd, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert(`Uploaded!\\nCID: ${res.data.cid}\\nSymKey (hex, demo only): ${res.data.symKeyHex}`);\n    } catch (err) {\n      alert(\"Upload failed: \" + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleUpload,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Patient Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: patientAddr,\n        onChange: e => setPatientAddr(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Record ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: recordId,\n        onChange: e => setRecordId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Upload Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadRecord, \"UCgUzfIX5JAcseAFTol5LgPy4F0=\");\n_c = UploadRecord;\nvar _c;\n$RefreshReg$(_c, \"UploadRecord\");","map":{"version":3,"names":["React","useState","API","jsxDEV","_jsxDEV","UploadRecord","_s","file","setFile","patientAddr","setPatientAddr","recordId","setRecordId","handleUpload","e","preventDefault","alert","fd","FormData","append","res","post","headers","data","cid","symKeyHex","err","message","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","type","files","_c","$RefreshReg$"],"sources":["/Users/yadhnikharkar/Desktop/dmrs-mvp/frontend/src/components/UploadRecord.js"],"sourcesContent":["import React, { useState } from 'react';\nimport API from '../api';\n\nexport default function UploadRecord() {\n  const [file, setFile] = useState(null);\n  const [patientAddr, setPatientAddr] = useState('');\n  const [recordId, setRecordId] = useState('');\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n    if (!file || !patientAddr || !recordId) {\n      alert(\"Please fill all fields and select a file\");\n      return;\n    }\n    const fd = new FormData();\n    fd.append('file', file);\n    fd.append('patientAddress', patientAddr);\n    fd.append('recordId', recordId);\n\n    try {\n      const res = await API.post('/records/upload', fd, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n      alert(`Uploaded!\\nCID: ${res.data.cid}\\nSymKey (hex, demo only): ${res.data.symKeyHex}`);\n    } catch (err) {\n      alert(\"Upload failed: \" + err.message);\n    }\n  };\n\n  return (\n    <form onSubmit={handleUpload}>\n      <div>\n        <label>Patient Address:</label>\n        <input value={patientAddr} onChange={e => setPatientAddr(e.target.value)} />\n      </div>\n      <div>\n        <label>Record ID:</label>\n        <input value={recordId} onChange={e => setRecordId(e.target.value)} />\n      </div>\n      <div>\n        <input type=\"file\" onChange={e => setFile(e.target.files[0])} />\n      </div>\n      <button type=\"submit\">Upload Record</button>\n    </form>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}