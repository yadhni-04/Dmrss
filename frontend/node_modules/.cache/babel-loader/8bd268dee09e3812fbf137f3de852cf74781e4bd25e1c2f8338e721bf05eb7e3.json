{"ast":null,"code":"var _jsxFileName = \"/Users/yadhnikharkar/Desktop/dmrs-mvp/frontend/src/pages/UploadPage.js\",\n  _s = $RefreshSig$();\n// src/pages/UploadPage.js\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadPage() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [patientAddress, setPatientAddress] = useState(\"\");\n  const [recordId, setRecordId] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!file || !patientAddress || !recordId) {\n      setMessage(\"Please fill all fields and select a file.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"patientAddress\", patientAddress);\n    formData.append(\"recordId\", recordId);\n    try {\n      const res = await axios.post(\"http://localhost:4000/api/records/upload\", formData);\n      setMessage(`Upload successful! CID: ${res.data.cid}`);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMessage(\"Upload failed: \" + ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Medical Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 75\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 80\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Patient Ethereum Address\",\n        value: patientAddress,\n        onChange: e => setPatientAddress(e.target.value),\n        style: {\n          width: \"400px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 168\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 173\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Record ID\",\n        value: recordId,\n        onChange: e => setRecordId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 117\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 122\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          padding: \"10px 20px\"\n        },\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadPage, \"hwHIyjwHe0M39CkgJI/bpPgTzUg=\");\n_c = UploadPage;\nvar _c;\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadPage","_s","file","setFile","patientAddress","setPatientAddress","recordId","setRecordId","message","setMessage","handleUpload","e","preventDefault","formData","FormData","append","res","post","data","cid","err","_err$response","_err$response$data","response","error","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","files","placeholder","value","width","_c","$RefreshReg$"],"sources":["/Users/yadhnikharkar/Desktop/dmrs-mvp/frontend/src/pages/UploadPage.js"],"sourcesContent":["// src/pages/UploadPage.js\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function UploadPage() {\n  const [file, setFile] = useState(null);\n  const [patientAddress, setPatientAddress] = useState(\"\");\n  const [recordId, setRecordId] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n    if (!file || !patientAddress || !recordId) {\n      setMessage(\"Please fill all fields and select a file.\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"patientAddress\", patientAddress);\n    formData.append(\"recordId\", recordId);\n\n    try {\n      const res = await axios.post(\"http://localhost:4000/api/records/upload\", formData);\n      setMessage(`Upload successful! CID: ${res.data.cid}`);\n    } catch (err) {\n      setMessage(\"Upload failed: \" + err.response?.data?.error || err.message);\n    }\n  };\n\n  return (\n    <div style={{ padding: \"20px\" }}>\n      <h2>Upload Medical Record</h2>\n      <form onSubmit={handleUpload}>\n        <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} /><br/><br/>\n        <input type=\"text\" placeholder=\"Patient Ethereum Address\" value={patientAddress} onChange={(e) => setPatientAddress(e.target.value)} style={{width:\"400px\"}} /><br/><br/>\n        <input type=\"text\" placeholder=\"Record ID\" value={recordId} onChange={(e) => setRecordId(e.target.value)} /><br/><br/>\n        <button type=\"submit\" style={{padding:\"10px 20px\"}}>Upload</button>\n      </form>\n      {message && <p>{message}</p>}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}